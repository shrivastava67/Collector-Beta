Creating installation scripts for Windows and Linux will help automate the process of installing and configuring your software on these platforms. Below are example installation scripts for both Windows and Linux based on the final codes you provided.

### Windows Installation Script:

You can create a batch script (e.g., `install_windows.bat`) to install and configure your software on Windows. Here's a basic example:

```batch
@echo off
echo Installing Your Software on Windows...

REM Step 1: Install Python (if not already installed)
if not exist "%ProgramFiles%\Python\Python39" (
    echo Installing Python...
    start /wait python-3.9.7-amd64.exe /quiet InstallAllUsers=1 PrependPath=1
)

REM Step 2: Install pip (if not already installed)
if not exist "%ProgramFiles%\Python\Python39\Scripts\pip.exe" (
    echo Installing pip...
    start /wait python-3.9.7-amd64.exe -m ensurepip --default-pip
)

REM Step 3: Install required packages
echo Installing required Python packages...
pip install -r requirements.txt

REM Step 4: Create desktop shortcut
echo Creating desktop shortcut...
copy your_shortcut.lnk %userprofile%\Desktop\

echo Installation complete!
```

In this script:

- It checks if Python and pip are installed. If not, it installs them.
- It installs the required Python packages specified in `requirements.txt`.
- It creates a desktop shortcut (replace `your_shortcut.lnk` with your actual shortcut file).

### Linux Installation Script:

For Linux, you can create a shell script (e.g., `install_linux.sh`) to install and configure your software. Here's an example:

```bash
#!/bin/bash
echo "Installing Your Software on Linux..."

# Step 1: Install Python (if not already installed)
if ! command -v python3 &>/dev/null; then
    echo "Installing Python..."
    sudo apt-get update
    sudo apt-get install -y python3
fi

# Step 2: Install pip (if not already installed)
if ! command -v pip3 &>/dev/null; then
    echo "Installing pip..."
    sudo apt-get install -y python3-pip
fi

# Step 3: Install required packages
echo "Installing required Python packages..."
pip3 install -r requirements.txt

# Step 4: Create desktop shortcut (if using a GUI)
# Note: Linux desktop environments vary; this is a general example
if [ -n "$XDG_CURRENT_DESKTOP" ]; then
    echo "Creating desktop shortcut..."
    cp your_shortcut.desktop ~/Desktop/
fi

echo "Installation complete!"
```

In this script:

- It checks if Python and pip are installed. If not, it installs them.
- It installs the required Python packages specified in `requirements.txt`.
- It creates a desktop shortcut (replace `your_shortcut.desktop` with your actual shortcut file).

These are basic examples, and you may need to adapt them to your specific requirements. Also, consider handling other aspects of the installation, such as setting up configuration files or running post-installation scripts if needed.

Make sure to provide clear instructions for users to run these scripts with appropriate permissions (e.g., as an administrator or with `sudo` on Linux).